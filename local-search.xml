<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CF 1620C BA-String题解</title>
    <link href="/2023/04/06/CF-1620C-BA-String%E9%A2%98%E8%A7%A3/"/>
    <url>/2023/04/06/CF-1620C-BA-String%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h3 id="原题目链接："><a href="#原题目链接：" class="headerlink" title="原题目链接："></a>原题目链接：</h3><p>  <a href="https://codeforces.com/problemset/problem/1620/C">CODEFORCES</a></p><h3 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h3><p>   给你一个字符串(只含a, * ), 将其中的*可以替换成[0,k]个b，问你所有情况中字典序第x小的是什么。</p><h3 id="题目思路："><a href="#题目思路：" class="headerlink" title="题目思路："></a>题目思路：</h3><p> 如果有： * * a * * * ,我们不难看出，如果<em>有连续n个，那么可能的情况有n</em>k+1个；再往前看(三个星号), 前面每多一种情况, 整体就多上面的res个, 也就是(n<em>k+1) * res。但是, 每段连续的星号要放多少个b呢?<br>还是从后往前看, 每次遇到连续的星号, x&#x2F;(cnt</em>k+1), 连续的星号的情况个数为x%(cnt*k+1)。值得注意的是, 在一切的开始之时x–了。因为排名是从1开始的, 不是0, 所以-1。下面是AC代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs 复制">#include &lt;bits/stdc++.h&gt;<br>using namespace std;<br>typedef long long LL;<br>int main() <br>&#123;<br>    int t;<br>    cin &gt;&gt; t;<br>    while(t --)<br>    &#123;<br>        LL h[2010]=&#123;0&#125;;<br>        int n, k;<br>        LL x;<br>        string s;<br>        cin &gt;&gt; n &gt;&gt; k &gt;&gt; x&gt;&gt; s;<br>        x --;//排名是从1开始的, 不是0, 所以-1. <br>        LL now=1;<br>        int cnt = 0;<br>        for(int i = n-1; i &gt;= 0 &amp;&amp; x != 0; i --)<br>        &#123;<br>            if(s[i]==&#x27;*&#x27;)cnt ++;<br>            else if(cnt&gt;0)<br>            &#123;<br>                h[i] = x % ((LL)cnt*k+1);<br>                x /= ((LL)cnt * k +1);<br>                cnt = 0;<br>            &#125;<br>        &#125;<br>        for(int i=0;i&lt;x;i++)cout &lt;&lt; &quot;b&quot;;//最前面没有a,不能赋值给h[i]<br>        for(int i =0; i &lt; n; i ++)<br>        &#123;<br>            if(s[i] == &#x27;a&#x27;)<br>            &#123;<br>                cout &lt;&lt; &#x27;a&#x27;;<br>                for(int j = 0; j &lt; h[i] ; j ++)cout &lt;&lt; &#x27;b&#x27;;<br>            &#125;<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br>    <br>    <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>小白如何利用GitHub搭建自己的博客</title>
    <link href="/2023/03/04/hello-world-1/"/>
    <url>/2023/03/04/hello-world-1/</url>
    
    <content type="html"><![CDATA[<p>很多人都想能够拥有自己的博客。但是自己购买服务器搭建博客不光成本高而且全自己搭建还要定期维护对大多数人来说是没有这个时间的。因此我选择了利用hexo在<a href="https://github.com/">GitHub</a>搭建自己的博客。</p><h3 id="第一步：安装Node-js"><a href="#第一步：安装Node-js" class="headerlink" title="第一步：安装Node.js"></a>第一步：安装Node.js</h3><p>hexo是nodeJS编写的，所以需要安装一下nodeJS和里面的npm工具。<a href="https://nodejs.org/en/">点此下载nodejs</a>.<br>安装完成后打开cmd输入以下指令测试是否安装成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">node -v<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">npm -v<br></code></pre></td></tr></table></figure><h3 id="第二步：安装Git"><a href="#第二步：安装Git" class="headerlink" title="第二步：安装Git"></a>第二步：安装Git</h3><p>Git是一款非常好的分布式排版系统，可以有效的管理你的博客文章。(强烈推荐学习，非常好用。之后我说的操作都是用Git Bash Here完成的）<a href="https://git-scm.com/downloads">点此下载Git</a>.</p><h3 id="第三步：安装hexo"><a href="#第三步：安装hexo" class="headerlink" title="第三步：安装hexo"></a>第三步：安装hexo</h3><p>安装步骤不能乱，hexo 的安装需要node.js的npm命令。<br>先创建一个文件夹blog（其他名字也行）。然后进到这个文件夹里直接通过鼠标右键选择git bash here打开（作用和cmd类似）。然后在里面输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">nmp install hexo-cli -g<br></code></pre></td></tr></table></figure><p>等待安装完后输入检测安装是否成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">hexo -v<br></code></pre></td></tr></table></figure><p>接着初始化一下hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">hexo init myblog//myblog也可以是其他名字。<br></code></pre></td></tr></table></figure><p>然后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">cd myblog<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">npm install//安装组件<br></code></pre></td></tr></table></figure><h3 id="第四步：Github操作"><a href="#第四步：Github操作" class="headerlink" title="第四步：Github操作"></a>第四步：Github操作</h3><p>打开github并注册账号<a href="https://github.com/">github</a>. 过程略过。<br>登录后点击右上角加号的第一行内容创建项目。Repository name填写的必须按照格式：你的账户名.github.io<br>同时要选择Add a README file打勾。<br>建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，点击Automatic page generator。等github pages创建完成，你就可以输入你创建的地址（你的用户名.github.io)测试是否创建成功（此时的页面是空的）。</p><h3 id="第五步：首次体验hexo"><a href="#第五步：首次体验hexo" class="headerlink" title="第五步：首次体验hexo"></a>第五步：首次体验hexo</h3><p>回到Git bash输入hexo s 开启本地服务器，访问你的网址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">hexo s<br></code></pre></td></tr></table></figure><p>将Git上给出的网址复制粘贴到浏览器（注：不能用cv法复制，需要选择后右键copy。Ctrl+c用于结束本地服务）。如果进不去过一会儿再试试，可能端口被占用了。</p><h3 id="第六步：连接hexo和github"><a href="#第六步：连接hexo和github" class="headerlink" title="第六步：连接hexo和github"></a>第六步：连接hexo和github</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 复制">git config --global user.name &quot;yourname&quot;<br>git config --global user.email &quot;youremail&quot;<br></code></pre></td></tr></table></figure><p>这里的yourname，youremail是你的github用户名和邮箱。<br>然后创建ssh，连续回车。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">ssh-keygen -t rsa -C &quot;youremail&quot;<br></code></pre></td></tr></table></figure><p>然后他会告诉你已经生成了ssh文件（默认路径：C:\Users\Administrator.ssh）找到该文件用记事本打开id_rsa.pub文件并复制里面的全部内容。<br>登录github，点击头像进入settings，新建一个new ssh key，标题随便取，将刚才复制的内容粘贴到key里面。输入[ssh -T <a href="mailto:&#103;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;">&#103;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;</a>]测试是否操作成功。如果失败了就删除刚才的东西重新来一边（用github搭建博客会经常这样）。<br>成功后在你的blog文件夹中找到_config.yml文件，修改repo值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs 复制"> # Deployment<br>## Docs: https://hexo.io/docs/one-command-deployment<br>deploy:<br>  type: git<br>  repo: https://github.com/你的账户名/你的账户名.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><h3 id="第七步：部署"><a href="#第七步：部署" class="headerlink" title="第七步：部署"></a>第七步：部署</h3><p>先安装deploy-git。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 复制">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 复制">hexo clean//以后操作都尽量带上clean用于清除你之前生成的东西<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>部署成功过一会儿后你就可以在http:&#x2F;&#x2F;你的用户名.github.io上看到你的博客了。<br>这样，你的博客就十分轻松的搭建好了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/04/hello-world/"/>
    <url>/2023/03/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
